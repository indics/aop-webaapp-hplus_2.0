<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">
	
	<security:http  entry-point-ref="multipleAuthenticationLoginEntry" lowercase-comparisons="true" servlet-api-provision="true">
		<security:intercept-url pattern="/static/**" filters="none" />
		<security:intercept-url pattern="/js/**" filters="none" />
		<security:intercept-url pattern="/styles/**" filters="none" />
		<security:intercept-url pattern="/pages/**" filters="none" />
		<security:intercept-url pattern="/commons/**" filters="none" />
		<security:intercept-url pattern="/media/**" filters="none" />
		<security:intercept-url pattern="/403*" filters="none" />
		<security:intercept-url pattern="/404*" filters="none" />
		<security:intercept-url pattern="/500*" filters="none" />
		<security:intercept-url pattern="/servlet/ValidCode" filters="none"/>
		<security:session-management invalid-session-url="/loginRedirect.ht">
			<security:concurrency-control error-if-maximum-exceeded="false" max-sessions="1" expired-url="/loginRedirect.ht"/>
		</security:session-management>
		<!--使用表单登录-->
		<security:remember-me key="systemPrivateKey"/> 
		<security:logout logout-url="/logout" logout-success-url="/loginRedirect.ht"/> 
		<security:custom-filter  ref="aopFilter" position="FIRST" />
		<security:custom-filter  ref="currentProfileFilter" position="LAST"/>
		<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="permissionFilter" />
		<security:custom-filter after="FILTER_SECURITY_INTERCEPTOR" ref="licenseFilter" />
		<security:access-denied-handler ref="htAccessDeniedHandler"/>
		<security:custom-filter position="SWITCH_USER_FILTER" ref="switchUserProcessingFilter"/>
	</security:http>
	
	<!-- 根据/loginRedirect.ht寻找actionPageMap类 -->
	<bean id="actionPageMap" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<!-- 系统管理员退出时返回页面 -->
				<entry key="system" value="/loginSystem.jsp"></entry>
				<!-- 企业管理员/logout时候返回页面 -->
				<entry key="admin" value="/loginAdmin.jsp"></entry>
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="switchUserProcessingFilter" class="com.cosim.core.web.filter.HtSwitchUserFilter">
            <property name="userDetailsService" ref="sysUserDao" />
            <property name="switchUserUrl" value="/j_spring_security_switch_user" />
            <property name="exitUserUrl" value="/j_spring_security_exit_user" />
            <property name="targetUrl" value="/home.ht" />
    </bean>
	
	<!--登录入口定义-->
	<bean id="multipleAuthenticationLoginEntry" class="com.cosim.core.web.security.MultipleAuthenticationLoginEntry">  
        <property name="defaultLoginUrl" value="/loginSystem.jsp"/>  
        <property name="directUrlResolvers">  
            <list>  
                <ref bean="systemLoginEntry"/>
                <ref bean="adminLoginEntry"/>
            </list>  
        </property>  
    </bean>  
  	
    <!-- 运营管理后台地址解析，可以直接输入，也可以快捷地址登陆，前提是Web工程不能放在根目录下，否则不生效 ，运营管理员是内置的账号-->  
    <bean id="systemLoginEntry" class="com.cosim.core.web.security.RequestUriDirectUrlResolver">  
        <property name="pattern" value="/system"/>  
        <property name="directUrl" value="/loginSystem.jsp"/>  
    </bean>
    
    <!-- 企业管理员，管理企业所属的人员、组织 -->  
    <bean id="adminLoginEntry" class="com.cosim.core.web.security.RequestUriDirectUrlResolver">  
        <property name="pattern" value="/admin"/>  
        <property name="directUrl" value="/loginAdmin.jsp"/>  
    </bean>
    
    <!-- 拒绝访问页面 -->
	<bean id="htAccessDeniedHandler" class="com.cosim.core.web.security.HtAccessDeniedHandler">
		<property name="accessDeniedUrl" value="/commons/403.jsp"></property>
	</bean>
		
	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<security:authentication-manager alias="authenticationManager" erase-credentials="false">
		<security:authentication-provider user-service-ref="sysUserDao">
			<security:password-encoder hash="sha-256" base64="true"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<bean id="aopFilter" class="com.cosim.core.web.filter.AopFilter"></bean>
	<bean id="currentProfileFilter" class="com.cosim.platform.web.filter.CurrentProfileFilter"></bean>
	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，我们的所有控制将在这三个类中实现 -->
	<bean id="permissionFilter" class="com.cosim.core.web.filter.PermissionFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>
	
	<bean id="licenseFilter" class="com.appleframe.web.filter.LicenseFilter"/>
	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<bean id="accessDecisionManager" class="com.cosim.core.web.security.HtDecisionManager" />
	
	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<bean id="securityMetadataSource"
		class="com.cosim.core.web.security.HtSecurityMetadataSource" scope="singleton" >
		<property name="anonymousUrls">
			<set>
				<value>/</value>
				<value>/loginRedirect.ht</value>
				<value>/cloud/system/auth/org/*</value>
				<value>/loginSystem.jsp</value>
				<value>/loginSystemPost.ht</value>
				<value>/loginAdmin.jsp</value>
				<value>/loginAdminPost.ht</value>
				<value>/bpmImage</value>
				<value>/platform/bpm/processRun/userImage.ht</value>
				<value>/platform/bpm/processRun/getFlowStatusByInstanceId.ht</value>
				<value>/platform/bpm/processRun/taskUser.ht</value>
				<value>/platform/bpm/taskOpinion/list.ht</value>
				<!-- flex附件上传的 -->
				<value>/platform/bpm/bpmDefinition/getXmlImport.ht</value>
			</set>
		</property>
	</bean>
</beans>